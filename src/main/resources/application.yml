server:
  port: 8081
#  查看详细的自动配置报告
#debug: true
# 值的写法
# map, 对象
friend:
  lastName: zhangSan
  age: 20
# 行内写法
friend2: {lastName: lisi,age: 22}

# 数组（list， set）
pet:
  - cat
  - dog
  - donkey
# 行内写法
pet2: [cat,dog,donkey]


# 配置文件值注入
person:
  lastName: hello
  age: 23
  boss: false
  birth: 2018/12/19
  maps: {key1: aa,key2: bb}
  lists:
    - zhangSan
    - liSi
  dog:
    name: 小狗
    age: 11

# 日志
logging:
# 输出文件路径
  path: C:\a.log
# 日志级别
  level:
    root: info
    com.ab.controller: info
    com.ab.service: debug
#      日志输出格式
  pattern:
#  控制台
    console: "%d{yyyy-MM-dd HH:mm:ss} -%5p ${PID:-} [%t] %L %30C{1.} : %m%n"
#    文件
#    file: "%d{yyyy-MM-dd HH:mm:ss} -%5p ${PID:-} [%15.15t] %-30.30C{1.} : %m%n"
#logging.level.com.ab.service=info
#logging.level.root=debug

#禁用模板引擎的缓存
spring:
  thymeleaf.cache: false
  # 定位模板的目录
  mvc.view.prefix: classpath:/templates/
  # 给返回的页面添加后缀名
  mvc.view.suffix: .html
  datasource:
    username: root
    password: 123456
    url: jdbc:mysql://aliyun.com:3309/db01
#    url: jdbc:mysql://127.0.0.1:3306/db01
    driver-class-name: com.mysql.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource

    initialSize: 2
    minIdle: 2
    maxActive: 10
    maxWait: 600000
    timeBetweenEvictionRunsMillis: 600000
    minEvictableIdleTimeMillis: 3000000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: true
  #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,log4j
    maxPoolPreparedStatementPerConnectionSize: 20
    useGlobalDataSourceStat: true
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
## jpa 配置
#  jpa:
#    hibernate:
##     更新或者创建数据表结构
#      ddl-auto: update
##    控制台显示SQL
#    show-sql: true
##    设置表引擎为 InnoDB
#    databasePlatform: org.hibernate.dialect.MySQL55Dialect
# rabbitMQ 配置
  rabbitmq:
    addresses: aliyun.com
    port: 5672
    username: root
    password: root
    virtual-host: /testhost
  redis:
    host: aliyun.com
    port: 6378

#    可能是版本问题，连不上 aliyun.com:9200, 没有使用这种方式连接es
#  data:
#    elasticsearch:
#      cluster-nodes: aliyun.com:9200
#      cluster-name: ""

#hibernate
#  dialect.storage_engine
mybatis:
# mybatis 配置文件位置
  config-location: classpath:mybatis/mybatis-config.xml
# mapper 配置文件位置
  mapper-locations: classpath:mybatis/mapper/*.xml
#    schema:
#      - classpath:sql/employee.sql

# 自定义 es RestClient 配置文件
ab:
  elasticsearch:
    hostname: aliyun.com
    port: 9200
    schema: http